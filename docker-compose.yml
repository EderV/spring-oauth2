version: '3.8'
name: spring-oauth2-compose

services:

  mysql:
    image: mysql:8.2
    container_name: mysql_container
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: MyrootP@swoord1!
      MYSQL_DATABASE: spring-oauth2
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data_prod:/var/lib/mysql

  spring-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring_app_container
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy

    environment:
      MYSQL_URL: "jdbc:mysql://mysql:3306/spring-oauth2?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC"
      MYSQL_USER: root
      MYSQL_PASS: MyrootP@swoord1!
    command: /bin/bash

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.0
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

volumes:
  mysql_data_prod: